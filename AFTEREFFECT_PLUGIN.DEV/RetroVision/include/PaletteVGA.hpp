#ifndef __IMAGE_LAB_RETRO_VISION_PALETTE_VGA_VALUES__
#define __IMAGE_LAB_RETRO_VISION_PALETTE_VGA_VALUES__

#include "PaletteEntry.hpp"
#include <cstdint>
#include <array>

constexpr int32_t VGA16_width  = 640;
constexpr int32_t VGA16_height = 480;

constexpr int32_t VGA256_width  = 320;
constexpr int32_t VGA256_height = 200;

using VGA_Palette16  = std::array<PEntry<uint8_t>, 16 >;
using VGA_Palette256 = std::array<PEntry<uint8_t>, 256>;

using VGA_Palette16F32  = std::array<PEntry<float>, 16 >;
using VGA_Palette256F32 = std::array<PEntry<float>, 256>;

// VGA standard 16 colors palette
CACHE_ALIGN constexpr VGA_Palette16 VGA_Standard16_u8 =
{{
    {   0,   0,   0 },
    {   0,   0, 170 },
    {   0, 170,   0 },
    {   0, 170, 170 },
    { 170,   0,   0 },
    { 170,   0, 170 },
    { 170,  85,   0 },
    { 170, 170, 170 },
    {  85,  85,  85 },
    {  85,  85, 255 },
    {  85, 255,  85 },
    {  85, 255, 255 },
    { 255,  85,  85 },
    { 255,  85, 255 },
    { 255, 255,  85 },
    { 255, 255, 255 }
}};

CACHE_ALIGN constexpr VGA_Palette16F32 VGA_Standard16_f32 =
{{
    { static_cast<float>(VGA_Standard16_u8[0 ].r) / 255.f, static_cast<float>(VGA_Standard16_u8[0 ].g) / 255.f, static_cast<float>(VGA_Standard16_u8[0 ].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[1 ].r) / 255.f, static_cast<float>(VGA_Standard16_u8[1 ].g) / 255.f, static_cast<float>(VGA_Standard16_u8[1 ].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[2 ].r) / 255.f, static_cast<float>(VGA_Standard16_u8[2 ].g) / 255.f, static_cast<float>(VGA_Standard16_u8[2 ].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[3 ].r) / 255.f, static_cast<float>(VGA_Standard16_u8[3 ].g) / 255.f, static_cast<float>(VGA_Standard16_u8[3 ].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[4 ].r) / 255.f, static_cast<float>(VGA_Standard16_u8[4 ].g) / 255.f, static_cast<float>(VGA_Standard16_u8[4 ].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[5 ].r) / 255.f, static_cast<float>(VGA_Standard16_u8[5 ].g) / 255.f, static_cast<float>(VGA_Standard16_u8[5 ].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[6 ].r) / 255.f, static_cast<float>(VGA_Standard16_u8[6 ].g) / 255.f, static_cast<float>(VGA_Standard16_u8[6 ].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[7 ].r) / 255.f, static_cast<float>(VGA_Standard16_u8[7 ].g) / 255.f, static_cast<float>(VGA_Standard16_u8[7 ].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[8 ].r) / 255.f, static_cast<float>(VGA_Standard16_u8[8 ].g) / 255.f, static_cast<float>(VGA_Standard16_u8[8 ].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[9 ].r) / 255.f, static_cast<float>(VGA_Standard16_u8[9 ].g) / 255.f, static_cast<float>(VGA_Standard16_u8[9 ].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[10].r) / 255.f, static_cast<float>(VGA_Standard16_u8[10].g) / 255.f, static_cast<float>(VGA_Standard16_u8[10].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[11].r) / 255.f, static_cast<float>(VGA_Standard16_u8[11].g) / 255.f, static_cast<float>(VGA_Standard16_u8[11].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[12].r) / 255.f, static_cast<float>(VGA_Standard16_u8[12].g) / 255.f, static_cast<float>(VGA_Standard16_u8[12].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[13].r) / 255.f, static_cast<float>(VGA_Standard16_u8[13].g) / 255.f, static_cast<float>(VGA_Standard16_u8[13].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[14].r) / 255.f, static_cast<float>(VGA_Standard16_u8[14].g) / 255.f, static_cast<float>(VGA_Standard16_u8[14].b) / 255.f },
    { static_cast<float>(VGA_Standard16_u8[15].r) / 255.f, static_cast<float>(VGA_Standard16_u8[15].g) / 255.f, static_cast<float>(VGA_Standard16_u8[15].b) / 255.f },
}};



// VGA 256 colors palette (Mode 13)
CACHE_ALIGN constexpr VGA_Palette256 VGA_Standard256_u8 =
{{
    {   0,   0,   0 },
    {   0,   0, 170 },
    {   0, 170,   0 },
    {   0, 170, 170 },
    { 170,   0,   0 },
    { 170,   0, 170 },
    { 170,  85,   0 },
    { 170, 170, 170 },
    {  85,  85,  85 },
    {  85,  85, 255 },
    {  85, 255,  85 },
    {  85, 255, 255 },
    { 255,  85,  85 },
    { 255,  85, 255 },
    { 255, 255,  85 },
    { 255, 255, 255 },
    {   0,   0,   0 },
    {  17,  17,  17 },
    {  34,  34,  34 },
    {  51,  51,  51 },
    {  68,  68,  68 },
    {  85,  85,  85 },
    { 102, 102, 102 },
    { 119, 119, 119 },
    { 136, 136, 136 },
    { 153, 153, 153 },
    { 170, 170, 170 },
    { 187, 187, 187 },
    { 204, 204, 204 },
    { 221, 221, 221 },
    { 238, 238, 238 },
    { 255, 255, 255 },
    { 170,   0,   0 },
    { 175,   0,   0 },
    { 181,   0,   0 },
    { 187,   0,   0 },
    { 192,   0,   0 },
    { 198,   0,   0 },
    { 204,   0,   0 },
    { 209,   0,   0 },
    { 215,   0,   0 },
    { 221,   0,   0 },
    { 226,   0,   0 },
    { 232,   0,   0 },
    { 238,   0,   0 },
    { 243,   0,   0 },
    { 249,   0,   0 },
    { 255,   0,   0 },
    {   0,   0,   0 },
    {   0,  17,   0 },
    {   0,  34,   0 },
    {   0,  51,   0 },
    {   0,  68,   0 },
    {   0,  85,   0 },
    {   0, 102,   0 },
    {   0, 119,   0 },
    {   0, 136,   0 },
    {   0, 153,   0 },
    {   0, 170,   0 },
    {   0, 187,   0 },
    {   0, 204,   0 },
    {   0, 221,   0 },
    {   0, 238,   0 },
    {   0, 255,   0 },
    {   0,   0,   0 },
    {   0,   0,  17 },
    {   0,   0,  34 },
    {   0,   0,  51 },
    {   0,   0,  68 },
    {   0,   0,  85 },
    {   0,   0, 102 },
    {   0,   0, 119 },
    {   0,   0, 136 },
    {   0,   0, 153 },
    {   0,   0, 170 },
    {   0,   0, 187 },
    {   0,   0, 204 },
    {   0,   0, 221 },
    {   0,   0, 238 },
    {   0,   0, 255 },
    {   0,   0,   0 },
    {   0,  17,  17 },
    {   0,  34,  34 },
    {   0,  51,  51 },
    {   0,  68,  68 },
    {   0,  85,  85 },
    {   0, 102, 102 },
    {   0, 119, 119 },
    {   0, 136, 136 },
    {   0, 153, 153 },
    {   0, 170, 170 },
    {   0, 187, 187 },
    {   0, 204, 204 },
    {   0, 221, 221 },
    {   0, 238, 238 },
    {   0, 255, 255 },
    {   0,   0,   0 },
    {  17,   0,  17 },
    {  34,   0,  34 },
    {  51,   0,  51 },
    {  68,   0,  68 },
    {  85,   0,  85 },
    { 102,   0, 102 },
    { 119,   0, 119 },
    { 136,   0, 136 },
    { 153,   0, 153 },
    { 170,   0, 170 },
    { 187,   0, 187 },
    { 204,   0, 204 },
    { 221,   0, 221 },
    { 238,   0, 238 },
    { 255,   0, 255 },
    {   0,   0,   0 },
    {  17,  17,   0 },
    {  34,  34,   0 },
    {  51,  51,   0 },
    {  68,  68,   0 },
    {  85,  85,   0 },
    { 102, 102,   0 },
    { 119, 119,   0 },
    { 136, 136,   0 },
    { 153, 153,   0 },
    { 170, 170,   0 },
    { 187, 187,   0 },
    { 204, 204,   0 },
    { 221, 221,   0 },
    { 238, 238,   0 },
    { 255, 255,   0 },
    {   0,   0,   0 },
    {   0,   0,   2 },
    {   0,   0,   4 },
    {   0,   0,   6 },
    {   0,   0,   8 },
    {   0,   0,  10 },
    {   0,   0,  12 },
    {   0,   0,  14 },
    {   0,   0,  16 },
    {   0,   0,  18 },
    {   0,   0,  20 },
    {   0,   0,  22 },
    {   0,   0,  24 },
    {   0,   0,  26 },
    {   0,   0,  28 },
    {   0,   0,  30 },
    {   0,   0,  32 },
    {   0,   0,  34 },
    {   0,   0,  36 },
    {   0,   0,  38 },
    {   0,   0,  40 },
    {   0,   0,  42 },
    {   0,   0,  44 },
    {   0,   0,  46 },
    {   0,   0,  48 },
    {   0,   0,  50 },
    {   0,   0,  52 },
    {   0,   0,  54 },
    {   0,   0,  56 },
    {   0,   0,  58 },
    {   0,   0,  60 },
    {   0,   0,  62 },
    {   0,   0,  64 },
    {   0,   0,  66 },
    {   0,   0,  68 },
    {   0,   0,  70 },
    {   0,   0,  72 },
    {   0,   0,  74 },
    {   0,   0,  76 },
    {   0,   0,  78 },
    {   0,   0,  80 },
    {   0,   0,  82 },
    {   0,   0,  85 },
    {   0,   0,  87 },
    {   0,   0,  89 },
    {   0,   0,  91 },
    {   0,   0,  93 },
    {   0,   0,  95 },
    {   0,   0,  97 },
    {   0,   0,  99 },
    {   0,   0, 101 },
    {   0,   0, 103 },
    {   0,   0, 105 },
    {   0,   0, 107 },
    {   0,   0, 109 },
    {   0,   0, 111 },
    {   0,   0, 113 },
    {   0,   0, 115 },
    {   0,   0, 117 },
    {   0,   0, 119 },
    {   0,   0, 121 },
    {   0,   0, 123 },
    {   0,   0, 125 },
    {   0,   0, 127 },
    {   0,   4,   0 },
    {   0,   4,   4 },
    {   0,   4,   8 },
    {   0,   4,  12 },
    {   0,   4,  16 },
    {   0,   4,  20 },
    {   0,   4,  24 },
    {   0,   4,  28 },
    {   0,   4,  32 },
    {   0,   4,  36 },
    {   0,   4,  40 },
    {   0,   4,  44 },
    {   0,   4,  48 },
    {   0,   4,  52 },
    {   0,   4,  56 },
    {   0,   4,  60 },
    {   0,   4,  64 },
    {   0,   4,  68 },
    {   0,   4,  72 },
    {   0,   4,  76 },
    {   0,   4,  80 },
    {   0,   4,  85 },
    {   0,   4,  89 },
    {   0,   4,  93 },
    {   0,   4,  97 },
    {   0,   4, 101 },
    {   0,   4, 105 },
    {   0,   4, 109 },
    {   0,   4, 113 },
    {   0,   4, 117 },
    {   0,   4, 121 },
    {   0,   4, 125 },
    {   0,   4, 129 },
    {   0,   4, 133 },
    {   0,   4, 137 },
    {   0,   4, 141 },
    {   0,   4, 145 },
    {   0,   4, 149 },
    {   0,   4, 153 },
    {   0,   4, 157 },
    {   0,   4, 161 },
    {   0,   4, 165 },
    {   0,   4, 170 },
    {   0,   4, 174 },
    {   0,   4, 178 },
    {   0,   4, 182 },
    {   0,   4, 186 },
    {   0,   4, 190 },
    {   0,   4, 194 },
    {   0,   4, 198 },
    {   0,   4, 202 },
    {   0,   4, 206 },
    {   0,   4, 210 },
    {   0,   4, 214 },
    {   0,   4, 218 },
    {   0,   4, 222 },
    {   0,   4, 226 },
    {   0,   4, 230 },
    {   0,   4, 234 },
    {   0,   4, 238 },
    {   0,   4, 242 },
    {   0,   4, 246 },
    {   0,   4, 250 },
    {   0,   4, 255 }
}};

CACHE_ALIGN constexpr VGA_Palette256F32 VGA_Standard256_f32 =
{{
    { static_cast<float>(VGA_Standard256_u8[0  ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[0  ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[0  ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[1  ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[1  ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[1  ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[2  ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[2  ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[2  ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[3  ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[3  ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[3  ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[4  ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[4  ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[4  ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[5  ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[5  ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[5  ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[6  ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[6  ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[6  ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[7  ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[7  ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[7  ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[8  ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[8  ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[8  ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[9  ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[9  ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[9  ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[10 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[10 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[10 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[11 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[11 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[11 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[12 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[12 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[12 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[13 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[13 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[13 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[14 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[14 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[14 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[15 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[15 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[15 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[16 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[16 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[16 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[17 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[17 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[17 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[18 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[18 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[18 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[19 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[19 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[19 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[20 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[20 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[20 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[21 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[21 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[21 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[22 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[22 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[22 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[23 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[23 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[23 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[24 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[24 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[24 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[25 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[25 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[25 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[26 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[26 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[26 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[27 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[27 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[27 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[28 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[28 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[28 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[29 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[29 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[29 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[30 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[30 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[30 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[31 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[31 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[31 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[32 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[32 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[32 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[33 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[33 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[33 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[34 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[34 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[34 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[35 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[35 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[35 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[36 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[36 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[36 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[37 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[37 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[37 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[38 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[38 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[38 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[39 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[39 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[39 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[40 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[40 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[40 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[41 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[41 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[41 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[42 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[42 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[42 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[43 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[43 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[43 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[44 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[44 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[44 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[45 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[45 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[45 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[46 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[46 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[46 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[47 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[47 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[47 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[48 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[48 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[48 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[49 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[49 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[49 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[50 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[50 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[50 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[51 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[51 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[51 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[52 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[52 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[52 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[53 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[53 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[53 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[54 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[54 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[54 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[55 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[55 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[55 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[56 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[56 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[56 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[57 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[57 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[57 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[58 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[58 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[58 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[59 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[59 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[59 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[60 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[60 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[60 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[61 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[61 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[61 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[62 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[62 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[62 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[63 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[63 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[63 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[64 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[64 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[64 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[65 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[65 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[65 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[66 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[66 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[66 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[67 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[67 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[67 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[68 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[68 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[68 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[69 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[69 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[69 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[70 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[70 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[70 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[71 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[71 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[71 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[72 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[72 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[72 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[73 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[73 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[73 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[74 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[74 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[74 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[75 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[75 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[75 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[76 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[76 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[76 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[77 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[77 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[77 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[78 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[78 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[78 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[79 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[79 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[79 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[80 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[80 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[80 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[81 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[81 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[81 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[82 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[82 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[82 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[83 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[83 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[83 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[84 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[84 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[84 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[85 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[85 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[85 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[86 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[86 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[86 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[87 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[87 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[87 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[88 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[88 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[88 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[89 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[89 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[89 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[90 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[90 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[90 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[91 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[91 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[91 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[92 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[92 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[92 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[93 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[93 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[93 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[94 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[94 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[94 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[95 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[95 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[95 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[96 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[96 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[96 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[97 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[97 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[97 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[98 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[98 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[98 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[99 ].r) / 255.f, static_cast<float>(VGA_Standard256_u8[99 ].g) / 255.f, static_cast<float>(VGA_Standard256_u8[99 ].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[100].r) / 255.f, static_cast<float>(VGA_Standard256_u8[100].g) / 255.f, static_cast<float>(VGA_Standard256_u8[100].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[101].r) / 255.f, static_cast<float>(VGA_Standard256_u8[101].g) / 255.f, static_cast<float>(VGA_Standard256_u8[101].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[102].r) / 255.f, static_cast<float>(VGA_Standard256_u8[102].g) / 255.f, static_cast<float>(VGA_Standard256_u8[102].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[103].r) / 255.f, static_cast<float>(VGA_Standard256_u8[103].g) / 255.f, static_cast<float>(VGA_Standard256_u8[103].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[104].r) / 255.f, static_cast<float>(VGA_Standard256_u8[104].g) / 255.f, static_cast<float>(VGA_Standard256_u8[104].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[105].r) / 255.f, static_cast<float>(VGA_Standard256_u8[105].g) / 255.f, static_cast<float>(VGA_Standard256_u8[105].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[106].r) / 255.f, static_cast<float>(VGA_Standard256_u8[106].g) / 255.f, static_cast<float>(VGA_Standard256_u8[106].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[107].r) / 255.f, static_cast<float>(VGA_Standard256_u8[107].g) / 255.f, static_cast<float>(VGA_Standard256_u8[107].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[108].r) / 255.f, static_cast<float>(VGA_Standard256_u8[108].g) / 255.f, static_cast<float>(VGA_Standard256_u8[108].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[109].r) / 255.f, static_cast<float>(VGA_Standard256_u8[109].g) / 255.f, static_cast<float>(VGA_Standard256_u8[109].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[110].r) / 255.f, static_cast<float>(VGA_Standard256_u8[110].g) / 255.f, static_cast<float>(VGA_Standard256_u8[110].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[111].r) / 255.f, static_cast<float>(VGA_Standard256_u8[111].g) / 255.f, static_cast<float>(VGA_Standard256_u8[111].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[112].r) / 255.f, static_cast<float>(VGA_Standard256_u8[112].g) / 255.f, static_cast<float>(VGA_Standard256_u8[112].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[113].r) / 255.f, static_cast<float>(VGA_Standard256_u8[113].g) / 255.f, static_cast<float>(VGA_Standard256_u8[113].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[114].r) / 255.f, static_cast<float>(VGA_Standard256_u8[114].g) / 255.f, static_cast<float>(VGA_Standard256_u8[114].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[115].r) / 255.f, static_cast<float>(VGA_Standard256_u8[115].g) / 255.f, static_cast<float>(VGA_Standard256_u8[115].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[116].r) / 255.f, static_cast<float>(VGA_Standard256_u8[116].g) / 255.f, static_cast<float>(VGA_Standard256_u8[116].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[117].r) / 255.f, static_cast<float>(VGA_Standard256_u8[117].g) / 255.f, static_cast<float>(VGA_Standard256_u8[117].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[118].r) / 255.f, static_cast<float>(VGA_Standard256_u8[118].g) / 255.f, static_cast<float>(VGA_Standard256_u8[118].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[119].r) / 255.f, static_cast<float>(VGA_Standard256_u8[119].g) / 255.f, static_cast<float>(VGA_Standard256_u8[119].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[120].r) / 255.f, static_cast<float>(VGA_Standard256_u8[120].g) / 255.f, static_cast<float>(VGA_Standard256_u8[120].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[121].r) / 255.f, static_cast<float>(VGA_Standard256_u8[121].g) / 255.f, static_cast<float>(VGA_Standard256_u8[121].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[122].r) / 255.f, static_cast<float>(VGA_Standard256_u8[122].g) / 255.f, static_cast<float>(VGA_Standard256_u8[122].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[123].r) / 255.f, static_cast<float>(VGA_Standard256_u8[123].g) / 255.f, static_cast<float>(VGA_Standard256_u8[123].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[124].r) / 255.f, static_cast<float>(VGA_Standard256_u8[124].g) / 255.f, static_cast<float>(VGA_Standard256_u8[124].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[125].r) / 255.f, static_cast<float>(VGA_Standard256_u8[125].g) / 255.f, static_cast<float>(VGA_Standard256_u8[125].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[126].r) / 255.f, static_cast<float>(VGA_Standard256_u8[126].g) / 255.f, static_cast<float>(VGA_Standard256_u8[126].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[127].r) / 255.f, static_cast<float>(VGA_Standard256_u8[127].g) / 255.f, static_cast<float>(VGA_Standard256_u8[127].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[128].r) / 255.f, static_cast<float>(VGA_Standard256_u8[128].g) / 255.f, static_cast<float>(VGA_Standard256_u8[128].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[129].r) / 255.f, static_cast<float>(VGA_Standard256_u8[129].g) / 255.f, static_cast<float>(VGA_Standard256_u8[129].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[130].r) / 255.f, static_cast<float>(VGA_Standard256_u8[130].g) / 255.f, static_cast<float>(VGA_Standard256_u8[130].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[131].r) / 255.f, static_cast<float>(VGA_Standard256_u8[131].g) / 255.f, static_cast<float>(VGA_Standard256_u8[131].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[132].r) / 255.f, static_cast<float>(VGA_Standard256_u8[132].g) / 255.f, static_cast<float>(VGA_Standard256_u8[132].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[133].r) / 255.f, static_cast<float>(VGA_Standard256_u8[133].g) / 255.f, static_cast<float>(VGA_Standard256_u8[133].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[134].r) / 255.f, static_cast<float>(VGA_Standard256_u8[134].g) / 255.f, static_cast<float>(VGA_Standard256_u8[134].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[135].r) / 255.f, static_cast<float>(VGA_Standard256_u8[135].g) / 255.f, static_cast<float>(VGA_Standard256_u8[135].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[136].r) / 255.f, static_cast<float>(VGA_Standard256_u8[136].g) / 255.f, static_cast<float>(VGA_Standard256_u8[136].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[137].r) / 255.f, static_cast<float>(VGA_Standard256_u8[137].g) / 255.f, static_cast<float>(VGA_Standard256_u8[137].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[138].r) / 255.f, static_cast<float>(VGA_Standard256_u8[138].g) / 255.f, static_cast<float>(VGA_Standard256_u8[138].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[139].r) / 255.f, static_cast<float>(VGA_Standard256_u8[139].g) / 255.f, static_cast<float>(VGA_Standard256_u8[139].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[140].r) / 255.f, static_cast<float>(VGA_Standard256_u8[140].g) / 255.f, static_cast<float>(VGA_Standard256_u8[140].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[141].r) / 255.f, static_cast<float>(VGA_Standard256_u8[141].g) / 255.f, static_cast<float>(VGA_Standard256_u8[141].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[142].r) / 255.f, static_cast<float>(VGA_Standard256_u8[142].g) / 255.f, static_cast<float>(VGA_Standard256_u8[142].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[143].r) / 255.f, static_cast<float>(VGA_Standard256_u8[143].g) / 255.f, static_cast<float>(VGA_Standard256_u8[143].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[144].r) / 255.f, static_cast<float>(VGA_Standard256_u8[144].g) / 255.f, static_cast<float>(VGA_Standard256_u8[144].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[145].r) / 255.f, static_cast<float>(VGA_Standard256_u8[145].g) / 255.f, static_cast<float>(VGA_Standard256_u8[145].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[146].r) / 255.f, static_cast<float>(VGA_Standard256_u8[146].g) / 255.f, static_cast<float>(VGA_Standard256_u8[146].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[147].r) / 255.f, static_cast<float>(VGA_Standard256_u8[147].g) / 255.f, static_cast<float>(VGA_Standard256_u8[147].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[148].r) / 255.f, static_cast<float>(VGA_Standard256_u8[148].g) / 255.f, static_cast<float>(VGA_Standard256_u8[148].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[149].r) / 255.f, static_cast<float>(VGA_Standard256_u8[149].g) / 255.f, static_cast<float>(VGA_Standard256_u8[149].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[150].r) / 255.f, static_cast<float>(VGA_Standard256_u8[150].g) / 255.f, static_cast<float>(VGA_Standard256_u8[150].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[151].r) / 255.f, static_cast<float>(VGA_Standard256_u8[151].g) / 255.f, static_cast<float>(VGA_Standard256_u8[151].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[152].r) / 255.f, static_cast<float>(VGA_Standard256_u8[152].g) / 255.f, static_cast<float>(VGA_Standard256_u8[152].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[153].r) / 255.f, static_cast<float>(VGA_Standard256_u8[153].g) / 255.f, static_cast<float>(VGA_Standard256_u8[153].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[154].r) / 255.f, static_cast<float>(VGA_Standard256_u8[154].g) / 255.f, static_cast<float>(VGA_Standard256_u8[154].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[155].r) / 255.f, static_cast<float>(VGA_Standard256_u8[155].g) / 255.f, static_cast<float>(VGA_Standard256_u8[155].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[156].r) / 255.f, static_cast<float>(VGA_Standard256_u8[156].g) / 255.f, static_cast<float>(VGA_Standard256_u8[156].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[157].r) / 255.f, static_cast<float>(VGA_Standard256_u8[157].g) / 255.f, static_cast<float>(VGA_Standard256_u8[157].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[158].r) / 255.f, static_cast<float>(VGA_Standard256_u8[158].g) / 255.f, static_cast<float>(VGA_Standard256_u8[158].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[159].r) / 255.f, static_cast<float>(VGA_Standard256_u8[159].g) / 255.f, static_cast<float>(VGA_Standard256_u8[159].b) / 255.f },


    { static_cast<float>(VGA_Standard256_u8[0].r) / 255.f, static_cast<float>(VGA_Standard256_u8[0].g) / 255.f, static_cast<float>(VGA_Standard256_u8[0].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[1].r) / 255.f, static_cast<float>(VGA_Standard256_u8[1].g) / 255.f, static_cast<float>(VGA_Standard256_u8[1].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[2].r) / 255.f, static_cast<float>(VGA_Standard256_u8[2].g) / 255.f, static_cast<float>(VGA_Standard256_u8[2].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[3].r) / 255.f, static_cast<float>(VGA_Standard256_u8[3].g) / 255.f, static_cast<float>(VGA_Standard256_u8[3].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[4].r) / 255.f, static_cast<float>(VGA_Standard256_u8[4].g) / 255.f, static_cast<float>(VGA_Standard256_u8[4].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[5].r) / 255.f, static_cast<float>(VGA_Standard256_u8[5].g) / 255.f, static_cast<float>(VGA_Standard256_u8[5].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[6].r) / 255.f, static_cast<float>(VGA_Standard256_u8[6].g) / 255.f, static_cast<float>(VGA_Standard256_u8[6].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[7].r) / 255.f, static_cast<float>(VGA_Standard256_u8[7].g) / 255.f, static_cast<float>(VGA_Standard256_u8[7].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[8].r) / 255.f, static_cast<float>(VGA_Standard256_u8[8].g) / 255.f, static_cast<float>(VGA_Standard256_u8[8].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[9].r) / 255.f, static_cast<float>(VGA_Standard256_u8[9].g) / 255.f, static_cast<float>(VGA_Standard256_u8[9].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[10].r) / 255.f, static_cast<float>(VGA_Standard256_u8[10].g) / 255.f, static_cast<float>(VGA_Standard256_u8[10].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[11].r) / 255.f, static_cast<float>(VGA_Standard256_u8[11].g) / 255.f, static_cast<float>(VGA_Standard256_u8[11].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[12].r) / 255.f, static_cast<float>(VGA_Standard256_u8[12].g) / 255.f, static_cast<float>(VGA_Standard256_u8[12].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[13].r) / 255.f, static_cast<float>(VGA_Standard256_u8[13].g) / 255.f, static_cast<float>(VGA_Standard256_u8[13].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[14].r) / 255.f, static_cast<float>(VGA_Standard256_u8[14].g) / 255.f, static_cast<float>(VGA_Standard256_u8[14].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[15].r) / 255.f, static_cast<float>(VGA_Standard256_u8[15].g) / 255.f, static_cast<float>(VGA_Standard256_u8[15].b) / 255.f },

    { static_cast<float>(VGA_Standard256_u8[0].r) / 255.f, static_cast<float>(VGA_Standard256_u8[0].g) / 255.f, static_cast<float>(VGA_Standard256_u8[0].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[1].r) / 255.f, static_cast<float>(VGA_Standard256_u8[1].g) / 255.f, static_cast<float>(VGA_Standard256_u8[1].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[2].r) / 255.f, static_cast<float>(VGA_Standard256_u8[2].g) / 255.f, static_cast<float>(VGA_Standard256_u8[2].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[3].r) / 255.f, static_cast<float>(VGA_Standard256_u8[3].g) / 255.f, static_cast<float>(VGA_Standard256_u8[3].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[4].r) / 255.f, static_cast<float>(VGA_Standard256_u8[4].g) / 255.f, static_cast<float>(VGA_Standard256_u8[4].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[5].r) / 255.f, static_cast<float>(VGA_Standard256_u8[5].g) / 255.f, static_cast<float>(VGA_Standard256_u8[5].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[6].r) / 255.f, static_cast<float>(VGA_Standard256_u8[6].g) / 255.f, static_cast<float>(VGA_Standard256_u8[6].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[7].r) / 255.f, static_cast<float>(VGA_Standard256_u8[7].g) / 255.f, static_cast<float>(VGA_Standard256_u8[7].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[8].r) / 255.f, static_cast<float>(VGA_Standard256_u8[8].g) / 255.f, static_cast<float>(VGA_Standard256_u8[8].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[9].r) / 255.f, static_cast<float>(VGA_Standard256_u8[9].g) / 255.f, static_cast<float>(VGA_Standard256_u8[9].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[10].r) / 255.f, static_cast<float>(VGA_Standard256_u8[10].g) / 255.f, static_cast<float>(VGA_Standard256_u8[10].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[11].r) / 255.f, static_cast<float>(VGA_Standard256_u8[11].g) / 255.f, static_cast<float>(VGA_Standard256_u8[11].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[12].r) / 255.f, static_cast<float>(VGA_Standard256_u8[12].g) / 255.f, static_cast<float>(VGA_Standard256_u8[12].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[13].r) / 255.f, static_cast<float>(VGA_Standard256_u8[13].g) / 255.f, static_cast<float>(VGA_Standard256_u8[13].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[14].r) / 255.f, static_cast<float>(VGA_Standard256_u8[14].g) / 255.f, static_cast<float>(VGA_Standard256_u8[14].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[15].r) / 255.f, static_cast<float>(VGA_Standard256_u8[15].g) / 255.f, static_cast<float>(VGA_Standard256_u8[15].b) / 255.f },

    { static_cast<float>(VGA_Standard256_u8[0].r) / 255.f, static_cast<float>(VGA_Standard256_u8[0].g) / 255.f, static_cast<float>(VGA_Standard256_u8[0].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[1].r) / 255.f, static_cast<float>(VGA_Standard256_u8[1].g) / 255.f, static_cast<float>(VGA_Standard256_u8[1].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[2].r) / 255.f, static_cast<float>(VGA_Standard256_u8[2].g) / 255.f, static_cast<float>(VGA_Standard256_u8[2].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[3].r) / 255.f, static_cast<float>(VGA_Standard256_u8[3].g) / 255.f, static_cast<float>(VGA_Standard256_u8[3].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[4].r) / 255.f, static_cast<float>(VGA_Standard256_u8[4].g) / 255.f, static_cast<float>(VGA_Standard256_u8[4].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[5].r) / 255.f, static_cast<float>(VGA_Standard256_u8[5].g) / 255.f, static_cast<float>(VGA_Standard256_u8[5].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[6].r) / 255.f, static_cast<float>(VGA_Standard256_u8[6].g) / 255.f, static_cast<float>(VGA_Standard256_u8[6].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[7].r) / 255.f, static_cast<float>(VGA_Standard256_u8[7].g) / 255.f, static_cast<float>(VGA_Standard256_u8[7].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[8].r) / 255.f, static_cast<float>(VGA_Standard256_u8[8].g) / 255.f, static_cast<float>(VGA_Standard256_u8[8].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[9].r) / 255.f, static_cast<float>(VGA_Standard256_u8[9].g) / 255.f, static_cast<float>(VGA_Standard256_u8[9].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[10].r) / 255.f, static_cast<float>(VGA_Standard256_u8[10].g) / 255.f, static_cast<float>(VGA_Standard256_u8[10].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[11].r) / 255.f, static_cast<float>(VGA_Standard256_u8[11].g) / 255.f, static_cast<float>(VGA_Standard256_u8[11].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[12].r) / 255.f, static_cast<float>(VGA_Standard256_u8[12].g) / 255.f, static_cast<float>(VGA_Standard256_u8[12].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[13].r) / 255.f, static_cast<float>(VGA_Standard256_u8[13].g) / 255.f, static_cast<float>(VGA_Standard256_u8[13].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[14].r) / 255.f, static_cast<float>(VGA_Standard256_u8[14].g) / 255.f, static_cast<float>(VGA_Standard256_u8[14].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[15].r) / 255.f, static_cast<float>(VGA_Standard256_u8[15].g) / 255.f, static_cast<float>(VGA_Standard256_u8[15].b) / 255.f },

    { static_cast<float>(VGA_Standard256_u8[0].r) / 255.f, static_cast<float>(VGA_Standard256_u8[0].g) / 255.f, static_cast<float>(VGA_Standard256_u8[0].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[1].r) / 255.f, static_cast<float>(VGA_Standard256_u8[1].g) / 255.f, static_cast<float>(VGA_Standard256_u8[1].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[2].r) / 255.f, static_cast<float>(VGA_Standard256_u8[2].g) / 255.f, static_cast<float>(VGA_Standard256_u8[2].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[3].r) / 255.f, static_cast<float>(VGA_Standard256_u8[3].g) / 255.f, static_cast<float>(VGA_Standard256_u8[3].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[4].r) / 255.f, static_cast<float>(VGA_Standard256_u8[4].g) / 255.f, static_cast<float>(VGA_Standard256_u8[4].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[5].r) / 255.f, static_cast<float>(VGA_Standard256_u8[5].g) / 255.f, static_cast<float>(VGA_Standard256_u8[5].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[6].r) / 255.f, static_cast<float>(VGA_Standard256_u8[6].g) / 255.f, static_cast<float>(VGA_Standard256_u8[6].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[7].r) / 255.f, static_cast<float>(VGA_Standard256_u8[7].g) / 255.f, static_cast<float>(VGA_Standard256_u8[7].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[8].r) / 255.f, static_cast<float>(VGA_Standard256_u8[8].g) / 255.f, static_cast<float>(VGA_Standard256_u8[8].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[9].r) / 255.f, static_cast<float>(VGA_Standard256_u8[9].g) / 255.f, static_cast<float>(VGA_Standard256_u8[9].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[10].r) / 255.f, static_cast<float>(VGA_Standard256_u8[10].g) / 255.f, static_cast<float>(VGA_Standard256_u8[10].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[11].r) / 255.f, static_cast<float>(VGA_Standard256_u8[11].g) / 255.f, static_cast<float>(VGA_Standard256_u8[11].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[12].r) / 255.f, static_cast<float>(VGA_Standard256_u8[12].g) / 255.f, static_cast<float>(VGA_Standard256_u8[12].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[13].r) / 255.f, static_cast<float>(VGA_Standard256_u8[13].g) / 255.f, static_cast<float>(VGA_Standard256_u8[13].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[14].r) / 255.f, static_cast<float>(VGA_Standard256_u8[14].g) / 255.f, static_cast<float>(VGA_Standard256_u8[14].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[15].r) / 255.f, static_cast<float>(VGA_Standard256_u8[15].g) / 255.f, static_cast<float>(VGA_Standard256_u8[15].b) / 255.f },

    { static_cast<float>(VGA_Standard256_u8[0].r) / 255.f, static_cast<float>(VGA_Standard256_u8[0].g) / 255.f, static_cast<float>(VGA_Standard256_u8[0].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[1].r) / 255.f, static_cast<float>(VGA_Standard256_u8[1].g) / 255.f, static_cast<float>(VGA_Standard256_u8[1].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[2].r) / 255.f, static_cast<float>(VGA_Standard256_u8[2].g) / 255.f, static_cast<float>(VGA_Standard256_u8[2].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[3].r) / 255.f, static_cast<float>(VGA_Standard256_u8[3].g) / 255.f, static_cast<float>(VGA_Standard256_u8[3].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[4].r) / 255.f, static_cast<float>(VGA_Standard256_u8[4].g) / 255.f, static_cast<float>(VGA_Standard256_u8[4].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[5].r) / 255.f, static_cast<float>(VGA_Standard256_u8[5].g) / 255.f, static_cast<float>(VGA_Standard256_u8[5].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[6].r) / 255.f, static_cast<float>(VGA_Standard256_u8[6].g) / 255.f, static_cast<float>(VGA_Standard256_u8[6].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[7].r) / 255.f, static_cast<float>(VGA_Standard256_u8[7].g) / 255.f, static_cast<float>(VGA_Standard256_u8[7].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[8].r) / 255.f, static_cast<float>(VGA_Standard256_u8[8].g) / 255.f, static_cast<float>(VGA_Standard256_u8[8].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[9].r) / 255.f, static_cast<float>(VGA_Standard256_u8[9].g) / 255.f, static_cast<float>(VGA_Standard256_u8[9].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[10].r) / 255.f, static_cast<float>(VGA_Standard256_u8[10].g) / 255.f, static_cast<float>(VGA_Standard256_u8[10].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[11].r) / 255.f, static_cast<float>(VGA_Standard256_u8[11].g) / 255.f, static_cast<float>(VGA_Standard256_u8[11].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[12].r) / 255.f, static_cast<float>(VGA_Standard256_u8[12].g) / 255.f, static_cast<float>(VGA_Standard256_u8[12].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[13].r) / 255.f, static_cast<float>(VGA_Standard256_u8[13].g) / 255.f, static_cast<float>(VGA_Standard256_u8[13].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[14].r) / 255.f, static_cast<float>(VGA_Standard256_u8[14].g) / 255.f, static_cast<float>(VGA_Standard256_u8[14].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[15].r) / 255.f, static_cast<float>(VGA_Standard256_u8[15].g) / 255.f, static_cast<float>(VGA_Standard256_u8[15].b) / 255.f },

    { static_cast<float>(VGA_Standard256_u8[0].r) / 255.f, static_cast<float>(VGA_Standard256_u8[0].g) / 255.f, static_cast<float>(VGA_Standard256_u8[0].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[1].r) / 255.f, static_cast<float>(VGA_Standard256_u8[1].g) / 255.f, static_cast<float>(VGA_Standard256_u8[1].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[2].r) / 255.f, static_cast<float>(VGA_Standard256_u8[2].g) / 255.f, static_cast<float>(VGA_Standard256_u8[2].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[3].r) / 255.f, static_cast<float>(VGA_Standard256_u8[3].g) / 255.f, static_cast<float>(VGA_Standard256_u8[3].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[4].r) / 255.f, static_cast<float>(VGA_Standard256_u8[4].g) / 255.f, static_cast<float>(VGA_Standard256_u8[4].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[5].r) / 255.f, static_cast<float>(VGA_Standard256_u8[5].g) / 255.f, static_cast<float>(VGA_Standard256_u8[5].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[6].r) / 255.f, static_cast<float>(VGA_Standard256_u8[6].g) / 255.f, static_cast<float>(VGA_Standard256_u8[6].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[7].r) / 255.f, static_cast<float>(VGA_Standard256_u8[7].g) / 255.f, static_cast<float>(VGA_Standard256_u8[7].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[8].r) / 255.f, static_cast<float>(VGA_Standard256_u8[8].g) / 255.f, static_cast<float>(VGA_Standard256_u8[8].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[9].r) / 255.f, static_cast<float>(VGA_Standard256_u8[9].g) / 255.f, static_cast<float>(VGA_Standard256_u8[9].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[10].r) / 255.f, static_cast<float>(VGA_Standard256_u8[10].g) / 255.f, static_cast<float>(VGA_Standard256_u8[10].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[11].r) / 255.f, static_cast<float>(VGA_Standard256_u8[11].g) / 255.f, static_cast<float>(VGA_Standard256_u8[11].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[12].r) / 255.f, static_cast<float>(VGA_Standard256_u8[12].g) / 255.f, static_cast<float>(VGA_Standard256_u8[12].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[13].r) / 255.f, static_cast<float>(VGA_Standard256_u8[13].g) / 255.f, static_cast<float>(VGA_Standard256_u8[13].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[14].r) / 255.f, static_cast<float>(VGA_Standard256_u8[14].g) / 255.f, static_cast<float>(VGA_Standard256_u8[14].b) / 255.f },
    { static_cast<float>(VGA_Standard256_u8[15].r) / 255.f, static_cast<float>(VGA_Standard256_u8[15].g) / 255.f, static_cast<float>(VGA_Standard256_u8[15].b) / 255.f }
}};

#endif // __IMAGE_LAB_RETRO_VISION_PALETTE_VGA_VALUES__